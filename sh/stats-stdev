#!/bin/sh
# -*- coding: utf-8-unix -*-
# vim:fileencoding=utf-8:ff=unix
# @(#) Calculate standard deviation from text like seq(1).

set -u
umask 0022
IFS=$(printf ' \t\n_'); IFS=${IFS%_}
PATH=/bin:/usr/bin
export IFS LC_ALL=C LANG=C PATH

readonly progname=${0##*/}
readonly version=1.1.0.20190405

# usage <exit-code>
usage() {
    echo "usage: $progname [-hv] [file ...]" 1>&2
    exit $1
}

# version (no parameter)
version() {
    echo "$progname $version" 1>&2
    exit 0
}

# error <message>
error() {
    echo "$progname:" ${@+"$@"} 1>&2
    exit 1
}

# do_exit <status>
do_exit() {
    rm -f "$tmpfile"
    exit $1
}

# main routine

opt=
while getopts 'hv' opt; do
    case $opt in
    h)      usage 0 ;;
    v)      version ;;
    \?)     usage 1 ;;
    esac
done
shift $(($OPTIND - 1))

trap 'rm -f "$tmpfile"; exit 1' 1 2 15

tmpfile=$(mktemp "$progname.$$.XXXXXXXXXX")
[ $? -eq 0 ] || error 'cannot create temporary file'

cat ${@+"$@"} >"$tmpfile"
{
sed '
1i\
scale = 16\
t = 0\
n = 0
s/^.*$/t += &; n++/
$a\
m = t / n' "$tmpfile"

sed '
1i\
t = 0
s/^.*$/t += (& - m) ^ 2/
$a\
sqrt(t / n)' "$tmpfile"
} | bc -q -s | tail -1

rm -f "$tmpfile"
