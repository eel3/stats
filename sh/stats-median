#!/bin/sh
# -*- coding: utf-8-unix -*-
# vim:fileencoding=utf-8:ff=unix
# @(#) Find a median value from text like seq(1).

set -u
umask 0022
IFS=$(printf ' \t\n_'); IFS=${IFS%_}
PATH=/bin:/usr/bin
export IFS LC_ALL=C LANG=C PATH

readonly progname="${0##*/}"
readonly version=1.1.1.20220710

# usage <exit-code>
usage() {
    echo "usage: $progname [-hv] [file ...]" 1>&2
    exit "$1"
}

# version (no parameter)
version() {
    echo "$progname $version" 1>&2
    exit 0
}

# error <message>
error() {
    echo "$progname:" ${@+"$@"} 1>&2
    exit 1
}

# do_exit <status>
do_exit() {
    rm -f "$tmpfile"
    exit "$1"
}

# main routine

opt=
while getopts 'hv' opt; do
    case $opt in
    h)      usage 0 ;;
    v)      version ;;
    \?)     usage 1 ;;
    esac
done
shift $((OPTIND - 1))

trap 'rm -f "$tmpfile"; exit 1' 1 2 15

tmpfile=$(mktemp "$progname.$$.XXXXXXXXXX") || error 'cannot create temporary file'

nsamples=$(sort -n ${@+"$@"} | tee "$tmpfile" | wc -l)
[ "$nsamples" -gt 0 ] || do_exit 0

mid=$((nsamples / 2))
if [ $((nsamples % 2)) = 1 ]; then
    sed -n "$((mid + 1))p" "$tmpfile"
else
    sed -n "$mid,$((mid + 1))p" "$tmpfile" |
    paste -d '+' -s |
    sed 's%^.*$%scale = 16; (&) / 2%' |
    bc -q -s
fi

rm -f "$tmpfile"
